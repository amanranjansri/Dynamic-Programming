class Solution {
public:

    int mincost(vector<int>& cost, int n,vector<int> &dp)
    {
        //base case
        if(n == 0)
        {
            return cost[0];
        }
        if(n == 1)
        {
            return cost[1];
        }

        //step -3
        if(dp[n] != -1)
        {
            return dp[n];
        }

        //recusive call
        //step -2

        dp[n]=  cost[n] + min(mincost(cost, n-1,dp) , mincost(cost, n-2,dp));
        return dp[n];
    }

    int minCostClimbingStairs(vector<int>& cost) {

        int n = cost.size();

        //step -1
        vector<int>  dp(n+1,-1);
        int ans = min(mincost(cost,n-1,dp), mincost(cost, n-2,dp));
        return ans;
    }
};
